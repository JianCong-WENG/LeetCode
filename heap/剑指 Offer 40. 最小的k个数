输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。

 

示例 1：

输入：arr = [3,2,1], k = 2
输出：[1,2] 或者 [2,1]
示例 2：

输入：arr = [0,1,2,1], k = 1
输出：[0]

思路：维护一个大根堆，堆中只有K个元素，遍历，小于对顶的元素才入堆

class Solution {
public:
    vector<int> getLeastNumbers(vector<int>& arr, int k) {
        vector<int> res(k, 0);
        if(k==0) return res;
        priority_queue<int> queue;
        for(int i=0; i<k; i++){
            queue.push(arr[i]);
        }
        for(int i=k; i<arr.size(); i++){
            if(queue.top()>arr[i]){
                queue.pop();
                queue.push(arr[i]);
            }
        }
        for(int i=0; i<k; i++){
            res[k-i-1] = queue.top();
            queue.pop();
        }
        return res;
    }
};
