用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )

思路：一个栈当队列，一个栈当辅助
python3：
class CQueue:

    def __init__(self):
        self.stack_in = []
        self.stack_out = []


    def appendTail(self, value: int) -> None:
        if self.stack_in:
            while self.stack_in:
                element = self.stack_in.pop()
                self.stack_out.append(element)
            self.stack_in.append(value)
            while self.stack_out:
                element = self.stack_out.pop()
                self.stack_in.append(element)
        else:
            self.stack_in.append(value)
        return self.stack_in


    def deleteHead(self) -> int:
        if not self.stack_in:
            return -1
        else:
            return self.stack_in.pop()
            
  C++：
class CQueue {
public:
    stack<int> stack_in;
    stack<int> stack_out;
    CQueue() {}
    
    void appendTail(int value) {
        if (!stack_in.empty()){
            while (!stack_in.empty()){
                int tmp = stack_in.top();
                stack_in.pop();
                stack_out.push(tmp);
            }
            stack_in.push(value);
            while (!stack_out.empty()){
                int tmp= stack_out.top();
                stack_out.pop();
                stack_in.push(tmp);
            }
        }
        else{
            stack_in.push(value);
        }


    }
    
    int deleteHead() {
        if (stack_in.empty()) return -1;
        int tmp = stack_in.top();
        stack_in.pop();
        return tmp;

    }
};
